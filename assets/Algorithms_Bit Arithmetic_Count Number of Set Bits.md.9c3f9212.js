import{_ as s,c as n,o as a,a as e}from"./app.5f69941c.js";const F='{"title":"Count Number of Set Bits","description":"","frontmatter":{},"headers":[{"level":3,"title":"O(n), where n is the number of bits of number.","slug":"o-n-where-n-is-the-number-of-bits-of-number"},{"level":3,"title":"O(k), k - number of set bits","slug":"o-k-k-number-of-set-bits"}],"relativePath":"Algorithms/Bit Arithmetic/Count Number of Set Bits.md"}',o={name:"Algorithms/Bit Arithmetic/Count Number of Set Bits.md"},l=e(`<h1 id="count-number-of-set-bits" tabindex="-1">Count Number of Set Bits <a class="header-anchor" href="#count-number-of-set-bits" aria-hidden="true">#</a></h1><p>20210126110722</p><h3 id="o-n-where-n-is-the-number-of-bits-of-number" tabindex="-1">O(n), where n is the number of bits of number. <a class="header-anchor" href="#o-n-where-n-is-the-number-of-bits-of-number" aria-hidden="true">#</a></h3><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count_set_bits</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    num_set_bits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        num_set_bits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_set_bits </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> num_set_bits</span></span>
<span class="line"></span></code></pre></div><h3 id="o-k-k-number-of-set-bits" tabindex="-1">O(k), k - number of set bits <a class="header-anchor" href="#o-k-k-number-of-set-bits" aria-hidden="true">#</a></h3><ul><li>clear the lowest set bit of by performing <code>x &amp;= (x-1)</code> and increment the counter</li><li>continue this process until x becomes 0</li></ul><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count_set_bits_fast</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    num_set_bits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        num_set_bits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_set_bits </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">        x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> num_set_bits</span></span>
<span class="line"></span></code></pre></div>`,7),t=[l];function p(r,c,i,D,C,y){return a(),n("div",null,t)}var u=s(o,[["render",p]]);export{F as __pageData,u as default};
