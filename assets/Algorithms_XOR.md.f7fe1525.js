import{_ as s,c as a,o as n,a as e}from"./app.5f69941c.js";const F='{"title":"XOR","description":"","frontmatter":{},"headers":[{"level":3,"title":"Properties","slug":"properties"},{"level":3,"title":"Swap two variables without using extra memory","slug":"swap-two-variables-without-using-extra-memory"},{"level":3,"title":"Find the oddly repeated value in given list","slug":"find-the-oddly-repeated-value-in-given-list"},{"level":3,"title":"You are given an array A of n - 1 integers which are in the range between 1 and n. All numbers appear exactly once, except one number, which is missing. Find this missing number.","slug":"you-are-given-an-array-a-of-n-1-integers-which-are-in-the-range-between-1-and-n-all-numbers-appear-exactly-once-except-one-number-which-is-missing-find-this-missing-number"}],"relativePath":"Algorithms/XOR.md"}',l={name:"Algorithms/XOR.md"},o=e(`<h1 id="xor" tabindex="-1">XOR <a class="header-anchor" href="#xor" aria-hidden="true">#</a></h1><p>20210122005545</p><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><ul><li>XOR is bitwise operation, so it works on any data type, int, float. string. object</li><li>x ^ 0 = x</li><li>x ^ x = 0</li><li>x ^ y = y ^ x</li><li>(x ^ y) ^ z = x ^ (y ^ z)</li></ul><h3 id="swap-two-variables-without-using-extra-memory" tabindex="-1">Swap two variables without using extra memory <a class="header-anchor" href="#swap-two-variables-without-using-extra-memory" aria-hidden="true">#</a></h3><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> y</span></span>
<span class="line"><span style="color:#A6ACCD;">y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> y </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> x</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> y</span></span>
<span class="line"></span></code></pre></div><h5 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-hidden="true">#</a></h5><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">x := x ^ y</span></span>
<span class="line"><span style="color:#A6ACCD;">y := y ^ x ^ y =&gt; y := x</span></span>
<span class="line"><span style="color:#A6ACCD;">x := x ^ y ^ x =&gt; x := y</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="find-the-oddly-repeated-value-in-given-list" tabindex="-1">Find the oddly repeated value in given list <a class="header-anchor" href="#find-the-oddly-repeated-value-in-given-list" aria-hidden="true">#</a></h3><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> functools </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> reduce</span></span>
<span class="line"><span style="color:#A6ACCD;">reduce</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">lambda</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">acc</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">curr</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;"> acc </span><span style="color:#89DDFF;">^</span><span style="color:#82AAFF;"> curr</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">],</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h5 id="explanation-1" tabindex="-1">Explanation <a class="header-anchor" href="#explanation-1" aria-hidden="true">#</a></h5><ul><li>using the x ^ 0 = x, x ^ x = 0, and (x ^ y) ^ z = x ^ (y ^ z), all the duplicate elements cancel each other and the odd one stands out.</li></ul><h3 id="you-are-given-an-array-a-of-n-1-integers-which-are-in-the-range-between-1-and-n-all-numbers-appear-exactly-once-except-one-number-which-is-missing-find-this-missing-number" tabindex="-1">You are given an array <code>A</code> of n - 1 integers which are in the range between 1 and n. All numbers appear exactly once, except one number, which is missing. Find this missing number. <a class="header-anchor" href="#you-are-given-an-array-a-of-n-1-integers-which-are-in-the-range-between-1-and-n-all-numbers-appear-exactly-once-except-one-number-which-is-missing-find-this-missing-number" aria-hidden="true">#</a></h3><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#ans = n*(n+1)/2 - sum(A)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">ans </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> A</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> A</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> ... </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> A</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h4 id="applications" tabindex="-1">applications: <a class="header-anchor" href="#applications" aria-hidden="true">#</a></h4><ul><li>conventional algorithm just works for natural numbers but the xor works for any object <ul><li>The set of potential elements are <code>Person</code> objects and we ought to find the <code>Person</code> missing from a list of values</li><li>The set of potential elements are all nodes in a graph and we are looking for a missing node</li><li>The set of potential elements are integers in general (not necessarily from 1 to n) and we want to find a missing integer</li></ul></li><li>If we want find the missing node, given n-1 nodes, we either have to build a hashmap (extra space) or sort the input (not all data is orderable) (O(nlogn)), but if we have the original node_1 ^ node_2 ^ \u2026 ^ node_n constant, in linear time and no extra space we can find the missing value</li></ul>`,16),p=[o];function t(r,i,c,y,d,h){return n(),a("div",null,p)}var C=s(l,[["render",t]]);export{F as __pageData,C as default};
