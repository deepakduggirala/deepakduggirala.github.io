import{_ as s,c as e,o as n,a}from"./app.5f69941c.js";const C='{"title":"Leetcode Conceptual Learnings","description":"","frontmatter":{},"headers":[{"level":3,"title":"Using Examples to develop solution","slug":"using-examples-to-develop-solution"},{"level":3,"title":"Not all Examples are equivalent","slug":"not-all-examples-are-equivalent"},{"level":3,"title":"Review https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/557/week-4-september-22nd-september-28th/3473/","slug":"review-https-leetcode-com-explore-challenge-card-september-leetcoding-challenge-557-week-4-september-22nd-september-28th-3473"}],"relativePath":"Algorithms/Leetcode Conceptual Learnings.md"}',l={name:"Algorithms/Leetcode Conceptual Learnings.md"},o=a(`<h1 id="leetcode-conceptual-learnings" tabindex="-1">Leetcode Conceptual Learnings <a class="header-anchor" href="#leetcode-conceptual-learnings" aria-hidden="true">#</a></h1><p>20200918111340</p><h3 id="using-examples-to-develop-solution" tabindex="-1">Using Examples to develop solution <a class="header-anchor" href="#using-examples-to-develop-solution" aria-hidden="true">#</a></h3><ul><li>Do not attempt to build patterns out of the examples given after the question, atleast before thinking about the problem generically. <ul><li>When you make your algorithms by solving on examples, you may miss other possible cases, edge cases.</li><li>Sometimes the examples are delibrately given to mislead you into thinking that those are the only possible inputs.</li><li>Develop the solution by thinking about the problem generically and identifying constraints as we do in math. Here we are not just solving some cases of examples but we are solving for the entire domain of possible examples.</li></ul></li></ul><h3 id="not-all-examples-are-equivalent" tabindex="-1">Not all Examples are equivalent <a class="header-anchor" href="#not-all-examples-are-equivalent" aria-hidden="true">#</a></h3><ul><li>By looking at examples given after the question, we may think that each example is equally probable to occur in the set of all possible examples.</li><li>This assumption is incorrect and sometimes lead you into thinking about the problem in wrong terms.</li><li>Example: <a href="https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/556/week-3-september-15th-september-21st/3463/" target="_blank" rel="noopener noreferrer">Robot bounded in a circle</a><ul><li>Here I mistakenly assumed that there are an equal number of possible instructions that make robot go to infinity and that make robot return to origin.</li></ul></li></ul><h3 id="review-https-leetcode-com-explore-challenge-card-september-leetcoding-challenge-557-week-4-september-22nd-september-28th-3473" tabindex="-1">Review <a href="https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/557/week-4-september-22nd-september-28th/3473/" target="_blank" rel="noopener noreferrer">https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/557/week-4-september-22nd-september-28th/3473/</a> <a class="header-anchor" href="#review-https-leetcode-com-explore-challenge-card-september-leetcoding-challenge-557-week-4-september-22nd-september-28th-3473" aria-hidden="true">#</a></h3><ul><li>I coded a O(nlogn) solution, but it can be done in O(n)</li></ul><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">findPoisonedDuration</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> timeSeries</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">],</span><span style="color:#A6ACCD;"> duration</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> duration </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        intervals </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sorted</span><span style="color:#89DDFF;">([</span><span style="color:#82AAFF;">n </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#82AAFF;"> start </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> timeSeries </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#82AAFF;"> n </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">[(</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">,-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;">duration</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)]])</span></span>
<span class="line"><span style="color:#A6ACCD;">        num_poisoned </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        poisoned_start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None</span></span>
<span class="line"><span style="color:#A6ACCD;">        poisoned_duration </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> t</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">val </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> intervals</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> poisoned_start </span><span style="color:#89DDFF;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None:</span></span>
<span class="line"><span style="color:#A6ACCD;">                poisoned_start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t</span></span>
<span class="line"><span style="color:#A6ACCD;">            num_poisoned </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> num_poisoned </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> val</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> num_poisoned </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">                poisoned_duration </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> poisoned_duration </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> t </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> poisoned_start </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">                poisoned_start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">None</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> poisoned_duration</span></span>
<span class="line"></span></code></pre></div>`,9),t=[o];function p(r,c,i,y,D,F){return n(),e("div",null,t)}var d=s(l,[["render",p]]);export{C as __pageData,d as default};
