import{_ as s,c as n,o,a}from"./app.5f69941c.js";const A='{"title":"Min Cost Climbing Stairs","description":"","frontmatter":{},"headers":[],"relativePath":"Algorithms/Dynamic Programming/Problems/Min Cost Climbing Stairs.md"}',l={name:"Algorithms/Dynamic Programming/Problems/Min Cost Climbing Stairs.md"},t=a(`<h1 id="min-cost-climbing-stairs" tabindex="-1">Min Cost Climbing Stairs <a class="header-anchor" href="#min-cost-climbing-stairs" aria-hidden="true">#</a></h1><p>20200903174132</p><p>source: <a href="https://leetcode.com/problems/min-cost-climbing-stairs/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/min-cost-climbing-stairs/</a></p><p>Given an array with non-negative numbers, find the minimum sum while traversing the array following these rules:</p><ul><li>start with 0 or 1 index</li><li>Add the current index value to the sum and you can jump to next or next-to-next index</li></ul><p>Questions</p><ul><li>Do I need to stop at the last index or can I overshoot it? <ul><li>you can(need to) overshoot it.</li></ul></li></ul><p>Number of ways of reaching beyond/above the last index <code>N-1</code> and their cost</p><ul><li>from N-1, C = f(N-1)+C(N-1)</li><li>from N-2, C = f(N-2)+C(N-2)</li></ul><p>Induction:</p><ul><li>f(N) = min( f(N-1)+C(N-1), f(N-2)+C(N-2))</li><li>f(0) = 0</li><li>f(1) = 0</li></ul><p>Solution:</p><ul><li>For i=2 to N compute f(i) and return f(N)</li></ul><p>Code:</p><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">minCostClimbingStairs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">self</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> cost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">])</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    min_cost_1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> min_cost_2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">cost</span><span style="color:#89DDFF;">)+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        t </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;"> min_cost_2 </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> cost</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">],</span><span style="color:#82AAFF;">  min_cost_1 </span><span style="color:#89DDFF;">+</span><span style="color:#82AAFF;"> cost</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        min_cost_2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> min_cost_1</span></span>
<span class="line"><span style="color:#A6ACCD;">        min_cost_1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> min_cost_1</span></span>
<span class="line"></span></code></pre></div>`,15),p=[t];function e(r,c,i,F,D,y){return o(),n("div",null,p)}var m=s(l,[["render",e]]);export{A as __pageData,m as default};
