import{_ as s,c as a,o as n,a as o}from"./app.5f69941c.js";const A='{"title":"Parity of binary word","description":"","frontmatter":{},"headers":[{"level":3,"title":"Parity of a binary word","slug":"parity-of-a-binary-word"},{"level":3,"title":"O(n) n - number of bits in the word","slug":"o-n-n-number-of-bits-in-the-word"},{"level":3,"title":"O(k), k - number of set bits","slug":"o-k-k-number-of-set-bits"},{"level":3,"title":"Ways to keep track of parity in a loop","slug":"ways-to-keep-track-of-parity-in-a-loop"},{"level":3,"title":"O(logn) n - number of bits in the word","slug":"o-logn-n-number-of-bits-in-the-word"}],"relativePath":"Algorithms/Bit Arithmetic/Parity of binary word.md"}',l={name:"Algorithms/Bit Arithmetic/Parity of binary word.md"},e=o(`<h1 id="parity-of-binary-word" tabindex="-1">Parity of binary word <a class="header-anchor" href="#parity-of-binary-word" aria-hidden="true">#</a></h1><p>20210126111516</p><h3 id="parity-of-a-binary-word" tabindex="-1">Parity of a binary word <a class="header-anchor" href="#parity-of-a-binary-word" aria-hidden="true">#</a></h3><ul><li>Parity is 1 if the number of set bits is odd else 0</li></ul><h3 id="o-n-n-number-of-bits-in-the-word" tabindex="-1">O(n) n - number of bits in the word <a class="header-anchor" href="#o-n-n-number-of-bits-in-the-word" aria-hidden="true">#</a></h3><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parity</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">))&amp;</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">#result = result ^ (x&amp;1)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;">#result ^= (x&amp;1)</span></span>
<span class="line"><span style="color:#A6ACCD;">        x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> result</span></span>
<span class="line"></span></code></pre></div><h3 id="o-k-k-number-of-set-bits" tabindex="-1">O(k), k - number of set bits <a class="header-anchor" href="#o-k-k-number-of-set-bits" aria-hidden="true">#</a></h3><ul><li>clear the lowest set bit of by performing <code>x &amp;= (x-1)</code> and increment the counter</li><li>continue this process until x becomes 0</li></ul><div class="language-python"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parity_fast</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">        x </span><span style="color:#89DDFF;">&amp;=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> result</span></span>
<span class="line"></span></code></pre></div><h3 id="ways-to-keep-track-of-parity-in-a-loop" tabindex="-1">Ways to keep track of parity in a loop <a class="header-anchor" href="#ways-to-keep-track-of-parity-in-a-loop" aria-hidden="true">#</a></h3><ul><li><code>result = (result + 1) %2</code></li><li><code>result = (result + 1) &amp; 1</code></li><li><code>result = result ^ 1</code> or <code>result =^ 1</code></li></ul><h3 id="o-logn-n-number-of-bits-in-the-word" tabindex="-1">O(logn) n - number of bits in the word <a class="header-anchor" href="#o-logn-n-number-of-bits-in-the-word" aria-hidden="true">#</a></h3>`,12),t=[e];function p(r,i,c,y,D,C){return n(),a("div",null,t)}var F=s(l,[["render",p]]);export{A as __pageData,F as default};
